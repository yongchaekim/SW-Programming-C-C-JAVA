#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAXN (500)

int N, M, K;//철도역수, 철도수, 추가로 연결시킬수있는 철도수
int S[MAXN + 10];
int E[MAXN + 10];

int link[MAXN+1][MAXN+1];
int visited[MAXN+1];
int group[MAXN+1];
int cnt;


void InputData(void) {
    scanf("%d %d %d", &N, &M, &K);
    for (int i = 0; i < M; i++) {
        scanf("%d %d", &S[i], &E[i]);
    }
}

int comp(const void *a, const void *b) {
	return *(int*)b - *(int*)a;
}

void Init(void) {
	memset(link, 0, sizeof(link));
	memset(visited, 0, sizeof(visited));
	memset(group, 0, sizeof(group));	
}

void Linkage(void) {
	for(int i=0; i<M; i++) {
		link[S[i]][E[i]] = 1;
		link[E[i]][S[i]] = 1;
	}
}

void FloodFill(int n) {
	if(visited[n]) return;
	cnt++;
	visited[n] = 1;
	for(int e=1; e<=N; e++) {
		if(link[n][e] == 0) continue;
		FloodFill(e);
	}
}

int Solve(void) {
	Init();
	Linkage();
	int idx=0;
	int sum=0;
	for(int i=1; i<=N; i++) {
		if(visited[i]) continue;
		cnt=0;
		FloodFill(i);
		group[idx++] = cnt;
	}
	qsort(group, idx, sizeof(group[0]), comp);
	for(int i=0; i < (K+1) && i<idx; i++) {
		sum+=group[i];
	}
	return sum;
}

int main(void) {
	int ans = -1;
    InputData();//입력받는 부분

	// 여기서부터 작성
	ans = Solve();
	
    printf("%d\n", ans);// 출력하는 부분
    return 0;
}
