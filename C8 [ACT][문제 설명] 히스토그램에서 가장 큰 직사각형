히스토그램은 직사각형 여러 개가 아래쪽으로 정렬되어 있는 도형이다. 각 직사각형은 같은 너비를 가지고 있지만, 높이는 서로 다를 수도 있다. 예를 들어, 왼쪽 그림은 높이가 2, 1, 4, 5, 1, 3, 3이고 너비가 1인 직사각형으로 이루어진 히스토그램이다.
 
 
히스토그램에서 가장 큰 직사각형을 구하는 프로그램을 작성하시오.
* 입출력 Template이 필요한 경우 C 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <stdio.h>
#define MAXN ((int)1e5)
int N;//히스토그램수
int H[MAXN+10];//히스토그램 높이
int InputData(void) {
    scanf("%d", &N);
    if (N == 0) return 0;

    for (int i=0; i<N; i++){
        scanf("%d", &H[i]);
    }
    return 1;
}

int main(void) {
    long long ans = -1;
    while(InputData()){//입력받는 부분

        //여기서부터 작성

        printf("%lld\n", ans);//출력하는 부분
    }
    return 0;
}
* 입출력 Template이 필요한 경우 C++ 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <iostream>
using namespace std;
#define MAXN ((int)1e5)
int N;//히스토그램수
int H[MAXN+10];//히스토그램 높이
bool InputData() {
	cin >> N;
	if (N == 0) return false;

	for (int i=0; i<N; i++){
		cin >> H[i];
	}
	return true;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	long long ans = -1;
	while(InputData()){//입력받는 부분

		//여기서부터 작성

		cout << ans << "\n";//출력하는 부분
	}
	return 0;
}
* 입출력 Template이 필요한 경우 Java 제출은 다음 코드를 복사하여 코드를 작성하시오.
import java.io.*;
import java.util.*;
public class Main {
	int N;//히스토그램수
	int H[];//히스토그램 높이

	boolean InputData(BufferedReader bf) throws IOException{
		String s[] = bf.readLine().split(" ");
		N = Integer.parseInt(s[0]);
		if (N == 0) return false;
		H = new int[N]; 
		for (int i=0; i<N; i++){
			H[i] = Integer.parseInt(s[i+1]);
		}
		return true;
	}

	public static void main(String[] args) throws IOException {
		long ans = -1;
		Main m = new Main();
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		while (m.InputData(bf)){//입력

			//여기서부터 작성

			//출력
			bw.write(String.valueOf(ans) + "\n");
		}
		bf.close();
		bw.flush();
		bw.close();
	}
}
* 입출력 Template이 필요한 경우 Python 제출은 다음 코드를 복사하여 코드를 작성하시오.
import sys

def input_data():
    readl = sys.stdin.readline
    N, *list_height = map(int,readl().split())
    return N, list_height


sol = []
while 1:
    # 입력받는 부분
    N, list_height = input_data()
    if N == 0: break
입력 설명
입력은 테스트 케이스 여러 개로 이루어져 있다.
각 테스트 케이스는 한 줄로 이루어져 있고, 직사각형의 수 n이 가장 처음으로 주어진다. (1 ≤ n ≤ 100,000) 그 다음 n개의 정수 h1, ..., hn (0 ≤ hi ≤ 1,000,000,000)가 주어진다.
이 숫자들은 히스토그램에 있는 직사각형의 높이이며, 왼쪽부터 오른쪽까지 순서대로 주어진다.
모든 직사각형의 너비는 1이고, 입력의 마지막 줄에는 0이 하나 주어진다.
출력 설명
각 테스트 케이스에 대해서, 히스토그램에서 가장 큰 직사각형의 넓이를 출력한다.
입력 예시
7 2 1 4 5 1 3 3
4 1000 1000 1000 1000
0
출력 예시
8
4000
