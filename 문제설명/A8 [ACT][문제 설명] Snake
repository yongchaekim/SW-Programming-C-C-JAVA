“Snake” 라는 도스 게임이 있다. 이 게임에는 뱀이 나와서 기어다니는데, 과일을 먹으면 뱀의 길이가 늘어난다. 뱀이 상하좌우로 기어다니다가 벽 또는 자기자신과 부딪히면 게임이 끝난다.
 
게임은 N*N 정사각형 격자에서 진행되며, 몇 개의 칸에는 과일이 놓여있다. 격자 상하좌우 가장자리 끝은 벽이다. 게임 시작 시 뱀 위치는 좌상단, 즉 (1, 1)에서 시작하며 뱀 길이는 1이고 오른쪽을 향해 있다.
 
매 초마다 이동을 하는데 다음과 같은 규칙이 있다
1.    먼저 뱀은 몸길이를 늘려 머리를 다음 칸으로 이동한다.
2.    만약 이동한 칸에 과일이 있다면 이 상태가 유지된다. 즉, 몸길이가 1 증가한 것이다. 해당 칸의 과일은 없어짐
3.    만약 이동한 칸에 과일이 없다면 몸길이가 원상태로 돌아와야 한다. 이때 꼬리가 위치한 칸을 비우게 된다.
 
정사각형 격자의 크기 N과 과일의 위치, 뱀의 이동경로가 주어졌을 때, 이 게임이 몇 초 후에 끝나는지 구하시오
* 입출력 Template이 필요한 경우 C 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <stdio.h>
#define MAXN (100)
int N;
int K;
int R[MAXN+10];
int C[MAXN+10];
int L;
int X[MAXN+10];
char CMD[MAXN+10];
void InputData(void){
    scanf("%d", &N);
    scanf("%d", &K);
    for (int i=0; i<K; i++){
        scanf("%d %d", &R[i], &C[i]);
    }
    scanf("%d", &L);
    for (int i=0; i<L; i++){
        scanf("%d %c", &X[i], &CMD[i]);
    }
}
int main(void){
    int ans = -1;

    InputData();//입력받는 부분

    //여기서부터 작성

    printf("%d\n", ans);//출력하는 부분
    return 0;
}
* 입출력 Template이 필요한 경우 C++ 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <iostream>
using namespace std;
#define MAXN (100)
int N;
int K;
int R[MAXN+10];
int C[MAXN+10];
int L;
int X[MAXN+10];
char CMD[MAXN+10];
void InputData(){
	cin >> N;
	cin >> K;
	for (int i=0; i<K; i++){
		cin >> R[i] >> C[i];
	}
	cin >> L;
	for (int i=0; i<L; i++){
		cin >> X[i] >> CMD[i];
	}
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int ans = -1;

	InputData();//입력받는 부분

	//여기서부터 작성

	cout << ans << "\n";//출력하는 부분
	return 0;
}
* 입출력 Template이 필요한 경우 Java 제출은 다음 코드를 복사하여 코드를 작성하시오.
import java.io.*;
import java.util.*;
public class Main {
	int N;
	int K;
	int R[];
	int C[];
	int L;
	int X[];
	char CMD[];

	void InputData() throws IOException{
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(bf.readLine());
		K = Integer.parseInt(bf.readLine());
		R = new int[K];
		C = new int[K];
		for (int i=0; i<K; i++){
			String s[] = bf.readLine().split(" ");
			R[i] = Integer.parseInt(s[0]);
			C[i] = Integer.parseInt(s[1]);
		}
		L = Integer.parseInt(bf.readLine());
		X = new int[L];
		CMD = new char[L];
		for (int i=0; i<L; i++){
			String s[] = bf.readLine().split(" ");
			X[i] = Integer.parseInt(s[0]);
			CMD[i] = s[1].charAt(0);
		}
		bf.close();
	}

	public static void main(String[] args) throws IOException {
		int ans = -1;
		Main m = new Main();

		m.InputData();//입력

		// 여기서부터 작성

		//출력
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		bw.write(String.valueOf(ans) + "\n");
		bw.flush();
		bw.close();
	}
}
* 입출력 Template이 필요한 경우 Python 제출은 다음 코드를 복사하여 코드를 작성하시오.
import sys


def input_data():
    readl = sys.stdin.readline
    N = int(readl())
    K = int(readl())
    pos = [tuple(map(int, readl().split())) for _ in range(K)]
    L = int(readl())
    cmd_list = [list(readl().split()) for _ in range(L)]

    return N, K, pos, L, cmd_list

sol = -1

# 입력받는 부분
N, K, pos, L, cmd_list = input_data()

# 여기서부터 작성

# 출력하는 부분
print(sol)
입력 설명
첫 번째 줄에는 정사각형 격자의 크기 N(2≤N≤100)이 입력된다.
두 번째 줄에는 과일의 개수 K(0≤K≤100)가 입력된다.
다음 줄부터 K줄에 걸쳐 과일 정보가 r(세로), c(가로) 순으로 공백으로 구분되어 입력된다. 시작위치인 (1, 1) 위치에는 과일이 없다.
다음 줄에 뱀 이동경로 개수 L(1≤L≤100)이 입력된다.
다음 줄부터 L줄에 걸쳐 뱀 이동 경로가 정수 X(1≤X≤10,000), 문자 C(‘L’ or ‘D’)가 공백으로 구분되어 입력된다. 게임 시작 시간으로부터 X초 후에 C 방향으로 전환한다는 의미이다. ‘L’은 왼쪽으로 90도, ‘D’는 오른쪽 90 전환을 의미한다.
출력 설명
몇 초 후에 이 게임이 끝나는지 출력한다.
입력 예시
6
3
3 4
2 5
5 3
3
3 D
15 L
17 D
출력 예시
9
