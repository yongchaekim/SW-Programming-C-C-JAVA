문제 설명
철수의 학교에서 ‘최고의 수식을 찾아라!’라는 대회가 진행중이다.
대회는 임의의 수 하나가 주어지고, 아래의 규칙을 따라 결정되는 최고 가치의 수식을 찾아내는 대회이다.
대회의 규칙은 다음과 같다.
 
<1> 수식 만들기
임의의 숫자 N이 주어졌을 때, 2의 제곱수들의 합이 N이 되는 수식을 만들어야 한다.
Ex) N = 7
1. 1+1+1+1+1+1+1
2. 1+1+1+1+1+2
3. 1+1+1+2+2
4. 1+1+1+4
5. 1+2+2+2
6. 1+2+4
위와 같이 총 6개의 수식이 만들어 진다.
 
<2> 수식의 가치
수식의 가치는 다음의 수식에 의해 결정된다.
( 사용된 2의 제곱수 항의 가치 합계 ) + (사용된 항의 개수 * 항 하나당 추가 가치)
 
제곱수 항의 가치는 항을 1~4개까지 사용 했을 때의 가치와 5개 이상 사용했을 때의 가치가 따로 주어진다.
 
EX) 2의 제곱수1,2,4 의 가치가 각각 5,10,7(4개 이하로 사용 했을 때), 2,20,4 ( 5개 이상 사용 했을 때 ) 그리고 항 하나당 추가 가치가 3일 경우,
 
1번 식의 가치는
2 * 7(1이 7개) + 3 * 7 (항이 7개) = 14 + 21 = 35
2번 식의 가치는
2 * 5(1이 5개) + 10 * 1(2가 1개) + 3 * 6(항이 6개) = 10 + 10 + 18 = 38
3번 식의 가치는
5 * 3(1이 3개) + 10 * 2(2가 2개) + 3 * 5(항이 5개) = 15 + 20 + 15 = 50
 
위의 모든 수식을 평가하면 3번 수식의 가치가 가장 높다고 판단 할 수 있다.
 
임의의 수 N이 주어졌을 때, 가장 가치가 높은 수식을 결정하는 프로그램을 작성하라.
* 입출력 Template이 필요한 경우 C 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <stdio.h>
#define MAXM (7)
int N;//임의의수
int WV[2][MAXM+1];
int A;//하나당 추가 가치

int sol;//가장 가치가 높은 수식의 수식 가치
int solcnt[MAXM+1];//사용횟수
void InputData(void){
    scanf("%d", &N);
    for (int i=0; i<2; i++){
        for (int j=0; j<MAXM; j++){
            scanf("%d", &WV[i][j]);
        }
    }
    scanf("%d", &A);
}
void OutputData(void){
    printf("%d\n", sol);
    for (int i=0; i<MAXM; i++){
        printf("%d ", solcnt[i]);
    }
    printf("\n");
}
int main(void){
    InputData();//입력
    
	//여기서부터 작성

    OutputData();//출력
    return 0;
}
* 입출력 Template이 필요한 경우 C++ 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <iostream>
using namespace std;
#define MAXM (7)
int N;//임의의수
int WV[2][MAXM+1];
int A;//하나당 추가 가치

int sol;//가장 가치가 높은 수식의 수식 가치
int solcnt[MAXM+1];//사용횟수
void InputData(){
	cin >> N;
	for (int i=0; i<2; i++){
		for (int j=0; j<MAXM; j++){
			cin >> WV[i][j];
		}
	}
	cin >> A;
}
void OutputData(){
	cout << sol << "\n";
	for (int i=0; i<MAXM; i++){
		cout << solcnt[i] << " ";
	}
	cout << "\n";
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	InputData();//입력

	//여기서부터 작성

	OutputData();//출력
	return 0;
}
* 입출력 Template이 필요한 경우 Java 제출은 다음 코드를 복사하여 코드를 작성하시오.
import java.io.*;
import java.util.*;
public class Main {
	final int MAXM = 7;
	int N;//임의의수
	int WV[][];
	int A;//하나당 추가 가치

	int sol;//가장 가치가 높은 수식의 수식 가치
	int solcnt[];//사용횟수

	void InputData() throws IOException{
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		N = Integer.parseInt(bf.readLine());
		WV = new int[2][MAXM];
		solcnt = new int[MAXM];
		for (int i=0; i<2; i++){
			String s[] = bf.readLine().split(" ");
			for (int j=0; j<MAXM; j++){
				WV[i][j] = Integer.parseInt(s[j]);
			}
		}
		A = Integer.parseInt(bf.readLine());
		bf.close();
	}

	void OutputData() throws IOException{
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		bw.write(String.valueOf(sol) + "\n");
		for (int i=0; i<MAXM; i++){
			bw.write(String.valueOf(solcnt[i]) + " ");
		}
		bw.write("\n");
		bw.flush();
		bw.close();
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();

		m.InputData();//입력

		// 여기서부터 작성

		m.OutputData();//출력
	}
}

입력 설명
첫 번째 줄에 임의의 수 N이 입력된다. (1<=N<=64)
두 번째 줄에는 2의 제곱수인 1,2,4,8,16,32,64 의 4개 이하 사용 시 가치 Wi가 공백으로 구분되어 입력된다. (1<=Wi<=2000)
세 번째 줄에는 2의 제곱수인 1,2,4,8,16,32,64 의 5개 이상 사용 시 가치 Vi가 공백으로 구분되어 입력된다. (1<=Vi<=2000)
네 번쩨 줄에는 항 하나당 추가 가치 A가 주어진다. (1<=A<=30)
출력 설명
첫 번째 줄에 가장 가치가 높은 수식의 수식 가치를 출력한다.
두 번째 줄에는 수식에서 2의 제곱수 1,2,4,8,16,32,64 각각의 사용 횟수를 공백으로 구분하여 출력한다.
(최고 가치의 수식이 2개이상인 경우는 없다.)
입력 예시
7
5 10 7 10 10 10 10
2 20 4 10 10 10 10
3
출력 예시
50
3 2 0 0 0 0 0 
