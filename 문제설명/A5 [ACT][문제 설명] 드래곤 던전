당신은 드래곤 던전에 갇히고 말았다. 여기서 탈출하는 가장 빠른 길은 무엇일까?
드래곤 던전은 각 변의 길이가 1인 정육면체(3차원 공간)로 이루어져있다.
각 정육면체는 금으로 이루어져 있어 지나갈 수 없거나, 비어있어서 지나갈 수 있게 되어있다.
당신은 각 칸에서 인접한 6개의 칸(동, 서, 남, 북, 상, 하)으로 1분의 시간을 들여 이동할 수 있다. 즉, 대각선으로 이동하는 것은 불가능하다.
그리고 드래곤 던전의 바깥면도 모두 금으로 막혀있어서 출구를 통해서만 탈출할 수 있다.
당신은 드래곤 던전을 탈출할 수 있을까? 그렇다면 시간은 얼마나 걸릴까? 
* 입출력 Template이 필요한 경우 C 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <stdio.h>
#define MAXN (30)

int L, R, C;
char map[MAXN+10][MAXN+10][MAXN+10];
int InputData(void){
	scanf("%d %d %d", &L, &R, &C);
	if ((L == 0) && (R == 0) && (C == 0)) return 0; 
	for (int l=0; l<L;l++){
		for (int r=0; r<R; r++){
			scanf("%s", map[l][r]);
		}
	}
	return 1;
}

int main(void){
	int ans = -1;
	while(InputData()){

		//여기서부터 작성

		if (ans == -1) printf("Trapped!\n");
		else printf("Escaped in %d minute(s).\n", ans);
	}
	return 0;
}
* 입출력 Template이 필요한 경우 C++ 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <iostream>
using namespace std;

#define MAXN (30)

int L, R, C;
char map[MAXN+10][MAXN+10][MAXN+10];
bool InputData(){
	cin >> L >> R >> C;
	if ((L == 0) && (R == 0) && (C == 0)) return false;
	for (int l=0; l<L;l++){
		for (int r=0; r<R; r++){
			cin >> map[l][r];
		}
	}
	return true;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int ans = -1;
	while(InputData()){

		//여기서부터 작성

		if (ans == -1) cout << "Trapped!" << "\n";
		else cout << "Escaped in " << ans << " minute(s)." << "\n";
	}
	return 0;
}
* 입출력 Template이 필요한 경우 Java 제출은 다음 코드를 복사하여 코드를 작성하시오.
import java.io.*;
import java.util.*;
public class Main {
	int L, R, C;
	char map[][][];

	boolean InputData(BufferedReader bf) throws IOException{
		String s[] = bf.readLine().split(" ");
		L = Integer.parseInt(s[0]);
		R = Integer.parseInt(s[1]);
		C = Integer.parseInt(s[2]);
		if ((L == 0) && (R == 0) && (C == 0)) return false;
		map = new char[L][R][C];
		for (int i=0; i<L; i++){
			for (int j=0; j<R; j++){
				map[i][j] = bf.readLine().toCharArray(); 
			}
			bf.readLine();
		}
		return true;
	}

	public static void main(String[] args) throws IOException {
		int ans = -1;
		Main m = new Main();
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		while (m.InputData(bf)){//입력
			//여기서부터 작성

			//출력
			if (ans == -1) bw.write("Trapped!\n");
			else bw.write("Escaped in " + String.valueOf(ans)+ " minute(s).\n");
		}
		bf.close();
		bw.flush();
		bw.close();
	}
}
* Python 제출은다음 Template을복사하여코드를작성하시오.
import sys

def input_data():
    L, R, C = map(int, readl().split())
    map_dungeon = [[list(readl().strip())for r in range(R+1)] for l in range(L)]
    return L, R, C, map_dungeon


readl = sys.stdin.readline
while 1:
    # 입력 받는 부분
    L, R, C, map_dungeon = input_data()
    if L == 0 and R == 0 and C == 0: break
    
    # 여기서부터 작성
입력 설명
입력은 여러 개의 테스트 케이스로 이루어져 있으며, 각 테스트 케이스는 세개의 정수 L, R, C로 시작한다.
L(1 ≤ L ≤ 30)은 드래곤 던전의 층 수이다. R(1 ≤ R ≤ 30)과 C(1 ≤ C ≤ 30)는 드래곤 던전의 한 층의 행과 열의 개수를 나타낸다.
그 다음 각 줄이 C개의 문자로 이루어진 R개의 행이 L번 주어진다. 각 문자는 드래곤 던전의 한 칸을 나타낸다.
금으로 막혀있어 지나갈 수 없는 칸은 '#'으로 표현되고, 비어있는 칸은 '.'으로 표현된다.
당신의 시작 지점은 'S'로 표현되고, 탈출할 수 있는 출구는 'E'로 표현된다.
각 층 사이에는 빈 줄이 있으며, 입력의 끝은 L, R, C가 모두 0으로 표현된다.
출력 설명
각 드래곤 던전에 대해 한 줄씩 답을 출력한다. 만약 당신이 탈출할 수 있다면 다음과 같이 출력한다.
Escaped in x minute(s).
여기서 x는 드래곤 던전을 탈출하는 데에 필요한 최단 시간이다.
만일 탈출이 불가능하다면, 다음과 같이 출력한다.
Trapped!
입력 예시
3 4 5
S....
.###.
.##..
###.#

#####
#####
##.##
##...

#####
#####
#.###
####E

1 3 3
S##
#E#
###

0 0 0
출력 예시
Escaped in 11 minute(s).
Trapped!
