눈금의 간격이 1인 M×N(M,N≤100)크기의 모눈종이가 있다. 이 모눈종이 위에 눈금에 맞추어 K개의 직사각형을 그릴 때, 이들 K개의 직사각형의 내부를 제외한 나머지 부분이 몇 개의 분리된 영역으로 나누어진다.
예를 들어 M=5, N=7 인 모눈종이 위에 <그림 1>과 같이 직사각형 3개를 그렸다면, 그 나머지 영역은 <그림 2>와 같이 3개의 분리된 영역으로 나누어지게 된다.
 

 
<그림 2>와 같이 분리된 세 영역의 넓이는 각각 1, 7, 13이 된다.
M, N과 K 그리고 K개의 직사각형의 좌표가 주어질 때, K개의 직사각형 내부를 제외한 나머지 부분이 몇 개의 분리된 영역으로 나누어지는지, 그리고 분리된 각 영역의 넓이가 얼마인지를 구하여 이를 출력하는 프로그램을 작성하시오.
* 입출력 Template이 필요한 경우 C 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <stdio.h>

#define MAX (100)
int M, N, K;//세로크기, 가로크기, 직사각형 개수
int sx[MAX+10];
int sy[MAX+10];
int ex[MAX+10];
int ey[MAX+10];

int sol[MAX * MAX];//각 영역 넓이 저장용
void InputData(){
    scanf("%d %d %d", &M, &N, &K);
    for (int i=0; i<K; i++){
        scanf("%d %d %d %d", &sx[i], &sy[i], &ex[i], &ey[i]);
    }
}
void OutputData(int ans){
    printf("%d\n", ans);
    for (int i=0; i<ans; i++){
        printf("%d ", sol[i]);
    }
    printf("\n");
}

int main(void){
    int ans = -1;
    InputData();//입력받는 부분

    //여기서부터 작성

    OutputData(ans);//출력하는 부분
    return 0;
}
* 입출력 Template이 필요한 경우 C++ 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <iostream>
using namespace std;

#define MAX (100)
int M, N, K;//세로크기, 가로크기, 직사각형 개수
int sx[MAX+10];
int sy[MAX+10];
int ex[MAX+10];
int ey[MAX+10];

int sol[MAX * MAX];//각 영역 넓이 저장용
void InputData(){
	cin >> M >> N >> K;
	for (int i=0; i<K; i++){
		cin >> sx[i] >> sy[i] >> ex[i] >> ey[i];
	}
}
void OutputData(int ans){
	cout << ans << "\n";
	for (int i=0; i<ans; i++){
		cout << sol[i] << " ";
	}
	cout << "\n";
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int ans = -1;
	InputData();//입력받는 부분

	//여기서부터 작성

	OutputData(ans);//출력하는 부분
	return 0;
}
* 입출력 Template이 필요한 경우 Java 제출은 다음 코드를 복사하여 코드를 작성하시오.
import java.io.*;
import java.util.*;
public class Main {
	int M, N, K;//세로크기, 가로크기, 직사각형 개수
	int sx[];
	int sy[];
	int ex[];
	int ey[];

	int sol[];//각 영역 넓이 저장용

	void InputData() throws IOException{
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		String s[] = bf.readLine().split(" ");
		M = Integer.parseInt(s[0]);
		N = Integer.parseInt(s[1]);
		K = Integer.parseInt(s[2]);
		sx = new int[K];
		sy = new int[K];
		ex = new int[K];
		ey = new int[K];
		sol = new int [M*N];
		for (int i=0; i<K; i++){
			s = bf.readLine().split(" ");
			sx[i] = Integer.parseInt(s[0]);
			sy[i] = Integer.parseInt(s[1]);
			ex[i] = Integer.parseInt(s[2]);
			ey[i] = Integer.parseInt(s[3]);
		}
		bf.close();
	}

	void OutputData(int ans) throws IOException{
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		bw.write(String.valueOf(ans) + "\n");
		for (int i=0; i<ans; i++){
			bw.write(String.valueOf(sol[i]) + " ");
		}
		bw.write("\n");
		bw.flush();
		bw.close();
	}

	public static void main(String[] args) throws IOException {
		int ans = -1;
		Main m = new Main();
		m.InputData();//입력

		//여기서부터 작성

		//출력
		m.OutputData(ans);
	}
}
* 입출력 Template이 필요한 경우 Python 제출은 다음 코드를 복사하여 코드를 작성하시오
import sys


def input_data():
    readl = sys.stdin.readline
    R, C, K = map(int, readl().split())
    rects = [list(map(int,readl().split())) for _ in range(K)]
    return R, C, K, rects


# 입력받는 부분
R, C, K, rects = input_data()

# 여기서부터 작성
입력 설명
첫째 줄에 M과 N, 그리고 K가 빈칸을 사이에 두고 차례로 주어진다. M, N, K는 모두 100 이하의 자연수이다.
둘째 줄부터 K개의 줄에는 한 줄에 하나씩 직사각형의 왼쪽 아래 꼭짓점의 x, y좌표값과 오른쪽 위 꼭짓점의 x, y좌표값이 빈칸을 사이에 두고 차례로 주어진다.
모눈종이의 왼쪽 꼭짓점의 좌표는 (0,0)이고, 오른쪽 위 꼭짓점의 좌표는(N,M)이다. 입력되는 K개의 직사각형들이 모눈종이 전체를 채우는 경우는 없다.
출력 설명
첫째 줄에 분리되어 나누어지는 영역의 개수를 출력한다. 둘째 줄에는 각 영역의 넓이를 오름차순으로 정렬하여 빈칸을 사이에 두고 출력한다.
입력 예시
5 7 3
0 2 4 4
1 1 2 5
4 0 6 2
출력 예시
3
1 7 13 
