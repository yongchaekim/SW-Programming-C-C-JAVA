사악한 황제 KAKTUS는 그의 마법 술통을 이용해 마법의 숲에 홍수가 생기도록 만들었다.
화가는 홍수로부터 안전한 비버의 굴로 도망가려고 한다.
마법의 숲 지도는 R행과 C열로 구성되어있다.
비어있는 곳은 '.', 홍수지역은 '*', 바위지역은 'X', 비버의 굴은 'D', 그리고 화가의 위치는 'S'로 표현된다.
매 분마다 화가는 그와 인접한 4개의 지역(상하좌우 위치)로 이동이 가능하다. 홍수지역 또한 매 분마다 그와 인접한 4개지역으로 뻗어나간다.
화가는 바위가 있는 구역과 홍수지역으로 이동하지 못하며, 홍수지역은 바위나 비버의 굴 위치로는 뻗어나갈 수 없다.
 
마법의 숲 지도가 주어졌을 때, 화가가 비버의 굴로 도망칠 수 있는 가장 짧은 시간은 구하여 출력하라.
 
참고 : 화가는 홍수가 먼저 확산된 곳으로 이동할 수 없으며, 같은 시간에 홍수가 도착할 곳으로 화가가 이동하는 것 역시 불가능하다.
* 입출력 Template이 필요한 경우 C 제출은 다음 코드를 복사하여 코드를 작성하시오.
#include <stdio.h>
#define MAXN (50)
int R, C;//지도 세로, 가로 크기
char map[MAXN+10][MAXN+10];
void InputData(void){
    scanf("%d %d", &R, &C);
    for (int i=0; i<R; i++){
        scanf("%s", map[i]);
    }
}
int main(void){
    int T, ans = -10;
    scanf("%d", &T);
    for (int t=1; t<=T; t++){
        InputData();//입력 받는 부분
        // 여기서부터 작성
        if (ans == -1) printf("KAKTUS\n");//출력 하는 부분
        else printf("%d\n", ans);
    }
    return 0;
}
* 입출력 Template이 필요한 경우 C++ 제출은 다음 코드를 복사하여 코드를 작성하시오
#include <iostream>
using namespace std;
#define MAXN (50)
int R, C;//지도 세로, 가로 크기
char map[MAXN+10][MAXN+10];
void InputData(){
	cin >> R >> C;
	for (int i=0; i<R; i++){
		cin >> map[i];
	}
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int T, ans = -10;
	cin >> T;
	for (int t=1; t<=T; t++){
		InputData();//입력 받는 부분

		// 여기서부터 작성 

		if (ans == -1) cout << "KAKTUS" << "\n";//출력 하는 부분
		else cout << ans << "\n";
	}
	return 0;
}
* 입출력 Template이 필요한 경우 Java 제출은 다음 코드를 복사하여 코드를 작성하시오.
import java.io.*;
import java.util.*;
public class Main {
	int R, C;//지도 세로, 가로 크기
	char map[][];

	void InputData(BufferedReader bf) throws IOException{
		String str[] = bf.readLine().split(" ");
		R = Integer.parseInt(str[0]);
		C = Integer.parseInt(str[1]);
		map = new char[R][C];
		for (int i=0; i<R; i++){
			map[i] = bf.readLine().toCharArray();
		}
	}

	public static void main(String[] args) throws IOException {
		Main m = new Main();
		BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		int T, ans=-10;
		T = Integer.parseInt(bf.readLine());
		for (int i=0; i<T; i++){
			m.InputData(bf);//입력

			// 여기서부터 작성

			//출력
			if (ans == -1) bw.write("KAKTUS\n");
			else bw.write(String.valueOf(ans) + "\n");
		}
		bw.flush();
		bw.close();
		bf.close();
	}
}
* 입출력 Template이 필요한 경우 Python 제출은 다음 코드를 복사하여 코드를 작성하시오.
import sys


def input_data():
    R, C = map(int,readl().split())
    map_forest = [[0] + list(readl()[:-1]) + [0] if 1<=r<=R else [0]*(C+2) for r in range(R+2)]
    return R,C,map_forest


readl = sys.stdin.readline
T = int(readl())
for _ in range(T):
    # 입력받는 부분
    R, C, map_forest = input_data()
    # 여기서부터 작성 

입력 설명
첫째 줄에 테스트 케이스의 갯수 T가 주어진다.
둘째 줄부터 T개의 테스트케이스 세트가 주어진다.
테스트 케이스의 첫째 줄에는 지도의 사이즈인 R,C 가 주어진다. (1<=R,C<=50)
테스트 케이스의 둘째 줄부터 R개의 줄에 마법의 숲 지도가 주어진다.
('D','S'는 하나씩만 주어진다, 지도에는 문제에서 설명한 문자만 주어진다. )
출력 설명
첫째 줄에 화가가 비버의 굴로 이동할 수 있는 가장 빠른 시간을 출력한다.
(만약, 비버의 굴로 도망칠 수 없다면, "KAKTUS"를 출력한다.)
입력 예시
1
10 11
D..........
...........
...........
...........
...........
...........
........S..
...........
...........
...........
출력 예시
14
부가정보
[입력예시 2]
1
10 15
*.......X......
......X........
X.....X.X..*...
.X....X.X......
D.X...X.XXXXXXX
......X....*...
......X.XXXXXXX
........S......
...............
XXXXXXXXX...*..

[출력예시 2]
11
